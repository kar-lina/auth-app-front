{"version":3,"file":"OTP-8rgdt3fD.js","sources":["../../../../components/Ui/OTP.vue"],"sourcesContent":["<template>\n  <div ref=\"otpCont\">\n    <input\n      v-for=\"(el, ind) in digits\"\n      :key=\"el ? el + ind : ind\"\n      v-model=\"digits[ind]\"\n      type=\"srting\"\n      :class=\"['digit-box', small ? '_small' : '']\"\n      :autofocus=\"ind === 0\"\n      :placeholder=\"String(ind + 1)\"\n      maxlength=\"1\"\n      @keydown=\"handleKeyDown($event, ind)\"\n    />\n  </div>\n</template>\n<script lang=\"ts\" setup>\nconst props = defineProps({\n  digitCount: {\n    type: Number,\n    required: true,\n  },\n  small: {\n    type: Boolean,\n    required: false,\n  },\n});\n\nconst digits: Array<null | string> = reactive([]);\nfor (let i = 0; i < props.digitCount; i++) {\n  digits[i] = null;\n}\n// if (props.default && props.default.length === props.digitCount) {\n//   for (let i = 0; i < props.digitCount; i++) {\n//     digits[i] = props.default.charAt(i);\n//   }\n// } else {\n\n// }\nconst otpCont = ref<HTMLDivElement | null>(null);\nconst emit = defineEmits([\"update:otp\"]);\n\nconst isDigitsFull = function () {\n  for (const elem of digits) {\n    if (elem == null || elem == undefined) {\n      return false;\n    }\n  }\n\n  return true;\n};\nconst handleKeyDown = function (event: KeyboardEvent, index: number) {\n  if (event.key !== \"Tab\" && event.key !== \"ArrowRight\" && event.key !== \"ArrowLeft\") {\n    event.preventDefault();\n  }\n\n  if (event.key === \"Backspace\") {\n    digits[index] = null;\n\n    if (index != 0) {\n      const prevElement = otpCont?.value?.children[index - 1] as HTMLInputElement;\n      if (prevElement) prevElement.focus();\n    }\n\n    return;\n  }\n\n  if (new RegExp(\"^([0-9])$\").test(event.key)) {\n    digits[index] = event.key;\n    console.log(otpCont?.value?.children[index + 1]);\n\n    if (index != props.digitCount - 1) {\n      const nextElement = otpCont?.value?.children[index + 1] as HTMLInputElement;\n      if (nextElement) {\n        // nextElement.setAttribute('value','My default value') ;\n        nextElement.focus();\n        // nextElement.value=\"\";\n      }\n    }\n  }\n  if (isDigitsFull()) {\n    emit(\"update:otp\", digits.join(\"\"));\n  }\n};\n</script>\n<style scoped>\n.digit-box {\n  height: 4rem;\n  width: 4rem;\n  border: 1px solid #eca9cf;\n  display: inline-block;\n  border-radius: 5px;\n  padding: 10px;\n  margin: 5px;\n  font-size: 2rem;\n}\n\n.digit-box._small {\n  height: 2rem;\n  width: 2rem;\n  border: 1px solid #eca9cf;\n  display: inline-block;\n  border-radius: 5px;\n  padding: 8px;\n  margin: 2px;\n  font-size: 1rem;\n}\n\n.digit-box:focus {\n  outline: 1px solid #ea96c5;\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAgBA,UAAM,QAAQ;AAWR,UAAA,SAA+B,SAAS,CAAA,CAAE;AAChD,aAAS,IAAI,GAAG,IAAI,MAAM,YAAY,KAAK;AACzC,aAAO,CAAC,IAAI;AAAA,IACd;AAQM,UAAA,UAAU,IAA2B,IAAI;;;;;;;;;;;;;;;;;;;;"}